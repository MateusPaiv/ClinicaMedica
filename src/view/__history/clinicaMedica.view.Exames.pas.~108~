unit clinicaMedica.view.Exames;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.WinXPickers, Vcl.StdCtrls,
  Vcl.Buttons, Vcl.ExtCtrls, Data.DB, Vcl.Grids, Vcl.DBGrids,
  clinicaMedica.conn.Conexao, System.ImageList, Vcl.ImgList, PngImageList;

type
  TfrmExames = class(TForm)
    Panel1: TPanel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    btnSalvar: TSpeedButton;
    Label1: TLabel;
    Label2: TLabel;
    Label6: TLabel;
    btnEditar: TSpeedButton;
    edtNomePac: TEdit;
    edtValor: TEdit;
    pnlSair: TPanel;
    Panel2: TPanel;
    btnSair: TSpeedButton;
    cmbMedico: TComboBox;
    cmbConvenios: TComboBox;
    edtDataConsulta: TDatePicker;
    cmbHora: TComboBox;
    dbPacientes: TDBGrid;
    lbPacientes: TLabel;
    PngImageList1: TPngImageList;
    rdPaciente: TRadioButton;
    rdExames: TRadioButton;
    Label8: TLabel;
    edtBuscaNome: TEdit;
    lblBusca: TLabel;
    dbExames: TDBGrid;
    lbExames: TLabel;
    edtExame: TEdit;
    procedure dbPacientesCellClick(Column: TColumn);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure btnSairClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure edtBuscaNomeChange(Sender: TObject);
    procedure rdPacienteClick(Sender: TObject);
    procedure rdExamesClick(Sender: TObject);
    procedure dbExamesCellClick(Column: TColumn);
  private
    { Private declarations }
    procedure listar;
    procedure listarExames;
    procedure carregarhora;
    procedure carregarConv;
    procedure carregarMed;
    procedure associarCampos;
    procedure habilitarCampos;
    procedure DesabilitarCampos;
    procedure limparCampos;
  public
    { Public declarations }
  end;

var
  frmExames: TfrmExames;
  idPaci, idMed, idConv, idExam: integer;

implementation

{$R *.dfm}

procedure TfrmExames.associarCampos;
begin
  dm.tbExames.FieldByName('data_exam').AsDateTime := edtDataConsulta.Date;
  dm.tbExames.FieldByName('horario_exam').Value := cmbHora.Text;
  dm.tbExames.FieldByName('desc_exam').Value := edtExame.Text;
  dm.tbExames.FieldByName('valor_exam').Value := edtValor.Text;
  dm.tbExames.FieldByName('id_paci').Value := idPaci;
  dm.tbExames.FieldByName('id_conv').Value := idConv;
  dm.tbExames.FieldByName('id_med').Value := idMed;
end;

procedure TfrmExames.btnSairClick(Sender: TObject);
begin
  Close;
end;

procedure TfrmExames.btnSalvarClick(Sender: TObject);
begin
  if edtValor.Text = '' then
  begin
    MessageDlg('Preencha o valor do exame', mtinformation, [mbOK], 0);
    edtValor.SetFocus;
    exit;
  end;

  if cmbMedico.Text = '' then
  begin
    MessageDlg('Preencha o campo médico do exame', mtinformation, [mbOK], 0);
    cmbMedico.SetFocus;
    exit;
  end;
  if cmbHora.Text = '' then
  begin
    MessageDlg('Preencha o horário do exame', mtinformation, [mbOK], 0);
    cmbHora.SetFocus;
    exit;
  end;
  if cmbConvenios.Text = '' then
  begin
    MessageDlg('Preencha o convênio\ou nenhum se não houver', mtinformation,
      [mbOK], 0);
    cmbConvenios.SetFocus;
    exit;
  end;

  if edtExame.Text = '' then
  begin
    MessageDlg('Preencha o campo "Exame"', mtinformation, [mbOK], 0);
    edtExame.SetFocus;
    exit;
  end;

  // pegando id do paciente
  dm.qryPaci.Close;
  dm.qryPaci.SQL.Clear;
  dm.qryPaci.SQL.Add('SELECT id_paci FROM pacientes where nome_paci = :nome');
  dm.qryPaci.ParamByName('nome').Value := edtNomePac.Text;
  dm.qryPaci.Open;

  idPaci := dm.qryPaci.FieldByName('id_paci').Value;

  // pagando id do convenio
  dm.qryConv.Close;
  dm.qryConv.SQL.Clear;
  dm.qryConv.SQL.Add('SELECT id_conv FROM convenios where nome_conv = :nome');
  dm.qryConv.ParamByName('nome').Value := cmbConvenios.Text;
  dm.qryConv.Open;

  idConv := dm.qryConv.FieldByName('id_conv').Value;

  // pegando id do tecnico

  dm.qryUser.Close;
  dm.qryUser.SQL.Clear;
  dm.qryUser.SQL.Add
    ('SELECT id_func_user FROM usuarios where nome_user = :nome');
  dm.qryUser.ParamByName('nome').Value := cmbMedico.Text;
  dm.qryUser.Open;
  idMed := dm.qryUser.FieldByName('id_func_user').Value;

  // VERIFICA SE JA EXISTE O EXAME
  dm.qryExames.Close;
  dm.qryExames.SQL.Clear;
  dm.qryExames.SQL.Add
    ('SELECT e.* , u.* FROM exames as e inner join usuarios as u ON e.id_med = u.id_func_user WHERE e.horario_exam = :hora AND e.data_exam = :data AND u.nome_user = :nome');
  dm.qryExames.ParamByName('hora').AsTime := StrToTime(cmbHora.Text);
  dm.qryExames.ParamByName('data').AsDate := edtDataConsulta.Date;
  dm.qryExames.ParamByName('nome').AsString := cmbMedico.Text;
  dm.qryExames.Open;

  if not dm.qryExames.IsEmpty then
  begin
    MessageDlg('Consulta já agendada nesse horário', mtinformation, [mbOK], 0);
    cmbHora.Text := '';
    cmbHora.SetFocus;
    exit;
  end;

  associarCampos;

  dm.tbExames.Post;
  DesabilitarCampos;
  listar;
  listarExames;
  limparCampos;
  MessageDlg('Exame cadastrado com sucesso!', mtinformation, [mbOK], 0);
end;

procedure TfrmExames.carregarConv;
begin
  dm.qryConv.Close;
  dm.qryConv.SQL.Clear;
  dm.qryConv.SQL.Add('SELECT nome_conv FROM convenios');
  dm.qryConv.Open;

  if not dm.qryConv.IsEmpty then
  begin
    while not dm.qryConv.Eof do
    begin
      cmbConvenios.Items.Add(dm.qryConv.FieldByName('nome_conv').AsString);
      dm.qryConv.Next;
    end;
  end;
end;

procedure TfrmExames.carregarhora;
var
  i: integer;
begin
  for i := 8 to 22 do
  begin
    cmbHora.Items.Add(i.ToString + ':00');
    cmbHora.Items.Add(i.ToString + ':30');
  end;
end;

procedure TfrmExames.carregarMed;
begin
  dm.qryUser.Close;
  dm.qryUser.SQL.Clear;
  dm.qryUser.SQL.Add
    ('SELECT nome_user FROM usuarios where nivel_acesso_user = 5');
  dm.qryUser.Open;

  if not dm.qryUser.IsEmpty then
  begin
    while not dm.qryUser.Eof do
    begin
      cmbMedico.Items.Add(dm.qryUser.FieldByName('nome_user').AsString);
      dm.qryUser.Next;
    end;
  end;
end;

procedure TfrmExames.dbExamesCellClick(Column: TColumn);
begin
  edtNomePac.Text := dm.qryExames.FieldByName('nome_paci').Value;
  cmbConvenios.Text := dm.qryExames.FieldByName('nome_conv').Value;
  cmbMedico.Text := dm.qryExames.FieldByName('nome_user').Value;
  edtExame.Text := dm.qryExames.FieldByName('desc_exam').Value;
  edtDataConsulta.Date := dm.qryExames.FieldByName('data_exam').Value;
  cmbHora.Text := dm.qryExames.FieldByName('horario_exam').Value;
  idExam := dm.qryExames.FieldByName('id_exam').Value;
  btnEditar.Visible := true;
  btnEditar.Enabled := true;

end;

procedure TfrmExames.dbPacientesCellClick(Column: TColumn);
begin
  cmbHora.Clear;
  cmbConvenios.Clear;
  cmbMedico.Clear;
  edtNomePac.Text := dm.qryPaci.FieldByName('nome_paci').Value;
  cmbConvenios.Text := dm.qryPaci.FieldByName('nome_conv').Value;
  idPaci := dm.qryPaci.FieldByName('id_paci').Value;
  btnSalvar.Enabled := true;
  carregarhora;
  carregarConv;
  carregarMed;
  habilitarCampos;
  dm.tbExames.Insert;
end;

procedure TfrmExames.DesabilitarCampos;
begin
  edtValor.Enabled := false;
  edtDataConsulta.Enabled := false;
  cmbMedico.Enabled := false;
  cmbConvenios.Enabled := false;
  cmbHora.Enabled := false;
  edtExame.Enabled := false;
end;

procedure TfrmExames.edtBuscaNomeChange(Sender: TObject);
begin
  dm.qryPaci.Close;
  dm.qryPaci.SQL.Clear;
  dm.qryPaci.SQL.Add
    ('SELECT * FROM pacientes WHERE nome_paci LIKE :nome ORDER BY nome_paci asc');
  dm.qryPaci.ParamByName('nome').AsString := edtBuscaNome.Text + '%';
  dm.qryPaci.Open;
end;

procedure TfrmExames.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  Action := caFree;
end;

procedure TfrmExames.FormShow(Sender: TObject);
begin
  dm.tbExames.Active := true;
  rdExames.Checked := true;
  lblBusca.Visible := false;
  edtBuscaNome.Visible := false;
  dbPacientes.Visible := false;
  lbPacientes.Visible := false;
  dbExames.Visible := true;
  lbExames.Visible := true;
  listarExames;
  listar;

end;

procedure TfrmExames.habilitarCampos;
begin
  edtValor.Enabled := true;
  edtDataConsulta.Enabled := true;
  cmbMedico.Enabled := true;
  cmbConvenios.Enabled := true;
  cmbHora.Enabled := true;
  edtExame.Enabled := true;

end;

procedure TfrmExames.limparCampos;
begin
  edtNomePac.Clear;
  edtValor.Clear;
  edtExame.Clear;
  cmbMedico.Clear;
  cmbConvenios.Clear;
  cmbHora.Clear;
end;

procedure TfrmExames.listar;
begin
  dm.qryPaci.Close;
  dm.qryPaci.SQL.Clear;
  dm.qryPaci.SQL.Add
    ('SELECT p.*, c.nome_conv FROM pacientes as p inner join convenios as c on p.convenio_paci = c.id_conv');
  dm.qryPaci.Open;
end;

procedure TfrmExames.listarExames;
begin
  dm.qryExames.Close;
  dm.qryExames.SQL.Clear;
  dm.qryExames.SQL.Add
    ('select u.nome_user, u.crm, e.* , conv.nome_conv, p.nome_paci from exames as e inner join usuarios as u ON u.id_func_user = e.id_med inner join convenios as conv on e.id_conv = conv.id_conv inner join pacientes as p on e.id_paci = p.id_paci');
  dm.qryExames.Open;
end;

procedure TfrmExames.rdExamesClick(Sender: TObject);
begin
  lblBusca.Visible := false;
  edtBuscaNome.Visible := false;
  dbPacientes.Visible := false;
  lbPacientes.Visible := false;
  listarExames;
  dbExames.Visible := true;
  lbExames.Visible := true;
end;

procedure TfrmExames.rdPacienteClick(Sender: TObject);
begin
  lblBusca.Visible := true;
  edtBuscaNome.Visible := true;
  dbPacientes.Visible := true;
  lbPacientes.Visible := true;
  dbExames.Visible := false;
  lbExames.Visible := false;
end;

end.
